/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

/**
 *
 * @author Mojiz
 */

import java.awt.*;
import javax.swing.*;
import javax.imageio.*;
import java.io.*;
import java.util.Enumeration;
import backend.*;
import logic.*;

public class AppGUI extends javax.swing.JFrame {

    /**
     * Creates new form AppGUI
     */
    public AppGUI() {
        initComponents();
        occSlotsPanelJr.setVisible(false);
        availSlotsPanelJr.setVisible(false);
        currButton = viewButton;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        vehicleType = new javax.swing.ButtonGroup();
        parkDialog = new javax.swing.JDialog();
        loginPanel = new javax.swing.JPanel();
        loginBox = new javax.swing.JPanel();
        uNameLabel = new javax.swing.JLabel();
        pwLabel = new javax.swing.JLabel();
        uNameText = new javax.swing.JTextField();
        pwText = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        errLabel = new javax.swing.JLabel();
        loginPicLabel = new javax.swing.JLabel();
        appPanel = new javax.swing.JPanel();
        imagePanel = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        menuPanel = new javax.swing.JPanel();
        parkButton = new javax.swing.JButton();
        releaseButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        logoutLabel = new javax.swing.JLabel();
        setLabel = new javax.swing.JLabel();
        cardsPanel = new javax.swing.JPanel();
        viewPanel = new javax.swing.JPanel();
        openSlotsPanel = new javax.swing.JPanel();
        vehicleTypeBox1 = new javax.swing.JComboBox<>();
        openSlotsLabel = new javax.swing.JLabel();
        availSlotsPanel = new javax.swing.JPanel();
        vehicleTypeBox3 = new javax.swing.JComboBox<>();
        availSlotsPanelJr = new javax.swing.JPanel();
        availVehicles = new javax.swing.JLabel();
        occSlotsPanel = new javax.swing.JPanel();
        vehicleTypeBox2 = new javax.swing.JComboBox<>();
        occSlotsPanelJr = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        parkPanel = new javax.swing.JPanel();
        vinLabel = new javax.swing.JLabel();
        vinText = new javax.swing.JTextField();
        carRButton = new javax.swing.JRadioButton();
        truckRButton = new javax.swing.JRadioButton();
        bikeRButton = new javax.swing.JRadioButton();
        typeLabel = new javax.swing.JLabel();
        colorLabel = new javax.swing.JLabel();
        parkConfirmButton = new javax.swing.JButton();
        vehicleColorBox = new javax.swing.JComboBox<>();
        releasePanel = new javax.swing.JPanel();
        ticketLabel = new javax.swing.JLabel();
        ticketText = new javax.swing.JTextField();
        releaseConfirmButton = new javax.swing.JButton();
        helpPanel = new javax.swing.JPanel();
        helpTabs = new javax.swing.JTabbedPane();
        parkingHelp = new javax.swing.JPanel();
        parkInsLabel = new javax.swing.JLabel();
        releasingHelp = new javax.swing.JPanel();
        releaseInsLabel = new javax.swing.JLabel();
        viewingHelp = new javax.swing.JPanel();
        viewInsLabel = new javax.swing.JLabel();
        upcomingFeatures = new javax.swing.JPanel();
        aboutUs = new javax.swing.JPanel();

        parkDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        parkDialog.setTitle("MESSAGE");

        javax.swing.GroupLayout parkDialogLayout = new javax.swing.GroupLayout(parkDialog.getContentPane());
        parkDialog.getContentPane().setLayout(parkDialogLayout);
        parkDialogLayout.setHorizontalGroup(
            parkDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        parkDialogLayout.setVerticalGroup(
            parkDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PARK IT");
        setIconImage(img);
        setMinimumSize(new java.awt.Dimension(932, 699));
        setSize(new java.awt.Dimension(932, 699));
        getContentPane().setLayout(new java.awt.CardLayout());

        loginPanel.setBackground(new java.awt.Color(255, 255, 153));
        loginPanel.setMinimumSize(new java.awt.Dimension(932, 699));
        loginPanel.setPreferredSize(new java.awt.Dimension(932, 699));
        loginPanel.setLayout(new java.awt.GridBagLayout());

        loginBox.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 255, 153), new java.awt.Color(153, 153, 153)), "Log in to your Account", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bahnschrift", 1, 18))); // NOI18N
        loginBox.setMinimumSize(new java.awt.Dimension(522, 562));
        loginBox.setPreferredSize(new java.awt.Dimension(522, 562));
        loginBox.setLayout(new java.awt.GridBagLayout());

        uNameLabel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        uNameLabel.setLabelFor(uNameText);
        uNameLabel.setText("Username:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 10, 10);
        loginBox.add(uNameLabel, gridBagConstraints);

        pwLabel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        pwLabel.setLabelFor(pwText);
        pwLabel.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 25, 10);
        loginBox.add(pwLabel, gridBagConstraints);

        uNameText.setToolTipText("Enter your username");
        uNameText.setPreferredSize(new java.awt.Dimension(200, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(25, 10, 10, 0);
        loginBox.add(uNameText, gridBagConstraints);

        pwText.setToolTipText("Enter your password");
        pwText.setPreferredSize(new java.awt.Dimension(200, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 25, 0);
        loginBox.add(pwText, gridBagConstraints);

        loginButton.setBackground(new java.awt.Color(255, 255, 153));
        loginButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        loginButton.setText("LOGIN");
        loginButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton.setPreferredSize(new java.awt.Dimension(80, 40));
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 15, 0);
        loginBox.add(loginButton, gridBagConstraints);

        errLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        loginBox.add(errLabel, gridBagConstraints);

        loginPicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tray.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 25, 0);
        loginBox.add(loginPicLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(113, 205, 113, 205);
        loginPanel.add(loginBox, gridBagConstraints);

        getContentPane().add(loginPanel, "login");

        appPanel.setPreferredSize(new java.awt.Dimension(932, 699));

        imagePanel.setPreferredSize(new java.awt.Dimension(932, 209));
        imagePanel.setLayout(new java.awt.BorderLayout());

        imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Parking_Lot_Area_resized-2.png"))); // NOI18N
        imageLabel.setToolTipText("WELCOME TO MULTI-STOREY VEHICLE PARKING SYSTEM");
        imageLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 3, true), "MULTI-STOREY VEHICLE PARKING SYSTEM", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_BOTTOM, new java.awt.Font("Bernard MT Condensed", 1, 36), new java.awt.Color(0, 204, 204))); // NOI18N
        imageLabel.setMinimumSize(new java.awt.Dimension(932, 209));
        imageLabel.setPreferredSize(new java.awt.Dimension(932, 209));
        imagePanel.add(imageLabel, java.awt.BorderLayout.CENTER);

        menuPanel.setBackground(new java.awt.Color(153, 255, 255));
        menuPanel.setMinimumSize(new java.awt.Dimension(100, 490));
        menuPanel.setPreferredSize(new java.awt.Dimension(100, 490));
        java.awt.GridBagLayout menuPanelLayout = new java.awt.GridBagLayout();
        menuPanelLayout.columnWidths = new int[] {0};
        menuPanelLayout.rowHeights = new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
        menuPanel.setLayout(menuPanelLayout);

        parkButton.setBackground(new java.awt.Color(153, 255, 255));
        parkButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/park.png"))); // NOI18N
        parkButton.setText("PARK");
        parkButton.setToolTipText("Park a Vehicle");
        parkButton.setBorder(null);
        parkButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        parkButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        parkButton.setPreferredSize(new java.awt.Dimension(72, 23));
        parkButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        parkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parkButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 25;
        gridBagConstraints.insets = new java.awt.Insets(70, 0, 0, 0);
        menuPanel.add(parkButton, gridBagConstraints);

        releaseButton.setBackground(new java.awt.Color(153, 255, 255));
        releaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/release.png"))); // NOI18N
        releaseButton.setText("RELEASE");
        releaseButton.setToolTipText("Unpark a Vehicle");
        releaseButton.setBorder(null);
        releaseButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        releaseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        releaseButton.setPreferredSize(new java.awt.Dimension(72, 23));
        releaseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        releaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releaseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 25;
        menuPanel.add(releaseButton, gridBagConstraints);

        viewButton.setBackground(new java.awt.Color(255, 255, 153));
        viewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/system-regular-24-view-1.png"))); // NOI18N
        viewButton.setText("VIEW");
        viewButton.setToolTipText("Show Parked Vehicles");
        viewButton.setBorder(null);
        viewButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        viewButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        viewButton.setPreferredSize(new java.awt.Dimension(72, 23));
        viewButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 25;
        menuPanel.add(viewButton, gridBagConstraints);

        helpButton.setBackground(new java.awt.Color(153, 255, 255));
        helpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/help.png"))); // NOI18N
        helpButton.setText("HELP");
        helpButton.setToolTipText("Click here to know the basics of this app");
        helpButton.setBorder(null);
        helpButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        helpButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        helpButton.setPreferredSize(new java.awt.Dimension(72, 23));
        helpButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 25;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 70, 0);
        menuPanel.add(helpButton, gridBagConstraints);

        logoutLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout2.png"))); // NOI18N
        logoutLabel.setToolTipText("Logout");
        logoutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutLabelMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 25;
        menuPanel.add(logoutLabel, gridBagConstraints);

        setLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/system-solid-63-settings-cog.png"))); // NOI18N
        setLabel.setToolTipText("Settings");
        setLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipady = 25;
        menuPanel.add(setLabel, gridBagConstraints);

        cardsPanel.setMinimumSize(new java.awt.Dimension(832, 490));
        cardsPanel.setPreferredSize(new java.awt.Dimension(832, 490));
        cardsPanel.setLayout(new java.awt.CardLayout());

        viewPanel.setMinimumSize(new java.awt.Dimension(832, 490));
        viewPanel.setPreferredSize(new java.awt.Dimension(832, 490));
        viewPanel.setLayout(new java.awt.GridBagLayout());

        openSlotsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "View No. of Open Slots"));
        openSlotsPanel.setPreferredSize(new java.awt.Dimension(320, 160));
        openSlotsPanel.setLayout(new java.awt.GridBagLayout());

        vehicleTypeBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Vehicle Type", "Car", "Truck", "Bike" }));
        vehicleTypeBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleTypeBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 15, 0);
        openSlotsPanel.add(vehicleTypeBox1, gridBagConstraints);

        openSlotsLabel.setLabelFor(vehicleTypeBox1);
        openSlotsLabel.setPreferredSize(new java.awt.Dimension(200, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        openSlotsPanel.add(openSlotsLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        viewPanel.add(openSlotsPanel, gridBagConstraints);

        availSlotsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Display Available Slots"));
        availSlotsPanel.setPreferredSize(new java.awt.Dimension(492, 470));
        availSlotsPanel.setLayout(new java.awt.GridBagLayout());

        vehicleTypeBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Vehicle Type", "Car", "Truck", "Bike" }));
        vehicleTypeBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleTypeBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        availSlotsPanel.add(vehicleTypeBox3, gridBagConstraints);

        availSlotsPanelJr.setPreferredSize(new java.awt.Dimension(110, 110));

        availVehicles.setText("The currently available slots will be displayed here :)");

        javax.swing.GroupLayout availSlotsPanelJrLayout = new javax.swing.GroupLayout(availSlotsPanelJr);
        availSlotsPanelJr.setLayout(availSlotsPanelJrLayout);
        availSlotsPanelJrLayout.setHorizontalGroup(
            availSlotsPanelJrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 569, Short.MAX_VALUE)
            .addGroup(availSlotsPanelJrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(availSlotsPanelJrLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(availVehicles)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        availSlotsPanelJrLayout.setVerticalGroup(
            availSlotsPanelJrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 539, Short.MAX_VALUE)
            .addGroup(availSlotsPanelJrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(availSlotsPanelJrLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(availVehicles)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 1.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        availSlotsPanel.add(availSlotsPanelJr, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 10);
        viewPanel.add(availSlotsPanel, gridBagConstraints);

        occSlotsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Display Occupied Slots"));
        occSlotsPanel.setPreferredSize(new java.awt.Dimension(320, 310));
        occSlotsPanel.setLayout(new java.awt.GridBagLayout());

        vehicleTypeBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Vehicle Type", "Car", "Truck", "Bike" }));
        vehicleTypeBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleTypeBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        occSlotsPanel.add(vehicleTypeBox2, gridBagConstraints);

        jLabel1.setText("The currently occupied slots will be displayed here :)");

        javax.swing.GroupLayout occSlotsPanelJrLayout = new javax.swing.GroupLayout(occSlotsPanelJr);
        occSlotsPanelJr.setLayout(occSlotsPanelJrLayout);
        occSlotsPanelJrLayout.setHorizontalGroup(
            occSlotsPanelJrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
            .addGroup(occSlotsPanelJrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(occSlotsPanelJrLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        occSlotsPanelJrLayout.setVerticalGroup(
            occSlotsPanelJrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
            .addGroup(occSlotsPanelJrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(occSlotsPanelJrLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.15;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        occSlotsPanel.add(occSlotsPanelJr, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        viewPanel.add(occSlotsPanel, gridBagConstraints);

        cardsPanel.add(viewPanel, "view");

        parkPanel.setMinimumSize(new java.awt.Dimension(832, 490));
        parkPanel.setPreferredSize(new java.awt.Dimension(832, 490));
        parkPanel.setLayout(new java.awt.GridBagLayout());

        vinLabel.setLabelFor(vinText);
        vinLabel.setText("Vehicle Identification Number:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        parkPanel.add(vinLabel, gridBagConstraints);

        vinText.setToolTipText("Enter VIN of the vehicle");
        vinText.setPreferredSize(new java.awt.Dimension(160, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 10, 0);
        parkPanel.add(vinText, gridBagConstraints);

        vehicleType.add(carRButton);
        carRButton.setText("Car");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        parkPanel.add(carRButton, gridBagConstraints);

        vehicleType.add(truckRButton);
        truckRButton.setText("Truck");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        parkPanel.add(truckRButton, gridBagConstraints);

        vehicleType.add(bikeRButton);
        bikeRButton.setText("Bike");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        parkPanel.add(bikeRButton, gridBagConstraints);

        typeLabel.setText("Type:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        parkPanel.add(typeLabel, gridBagConstraints);

        colorLabel.setLabelFor(vehicleColorBox);
        colorLabel.setText("Color:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 20, 0);
        parkPanel.add(colorLabel, gridBagConstraints);

        parkConfirmButton.setBackground(new java.awt.Color(255, 255, 153));
        parkConfirmButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        parkConfirmButton.setText("CONFIRM");
        parkConfirmButton.setToolTipText("Park the vehicle");
        parkConfirmButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        parkConfirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        parkConfirmButton.setPreferredSize(new java.awt.Dimension(90, 35));
        parkConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parkConfirmButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        parkPanel.add(parkConfirmButton, gridBagConstraints);

        vehicleColorBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "White", "Grey", "Red", "Blue", "Yellow" }));
        vehicleColorBox.setToolTipText("Select the color of the vehicle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 20, 0);
        parkPanel.add(vehicleColorBox, gridBagConstraints);

        cardsPanel.add(parkPanel, "park");

        releasePanel.setMinimumSize(new java.awt.Dimension(832, 490));
        releasePanel.setPreferredSize(new java.awt.Dimension(832, 490));
        releasePanel.setLayout(new java.awt.GridBagLayout());

        ticketLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ticketLabel.setText("Ticket ID:");
        ticketLabel.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        releasePanel.add(ticketLabel, gridBagConstraints);

        ticketText.setToolTipText("Enter the ticket ID of the vehicle to be released");
        ticketText.setPreferredSize(new java.awt.Dimension(208, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        releasePanel.add(ticketText, gridBagConstraints);

        releaseConfirmButton.setBackground(new java.awt.Color(255, 255, 153));
        releaseConfirmButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        releaseConfirmButton.setText("CONFIRM");
        releaseConfirmButton.setToolTipText("Release the vehicle");
        releaseConfirmButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        releaseConfirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        releaseConfirmButton.setPreferredSize(new java.awt.Dimension(90, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        releasePanel.add(releaseConfirmButton, gridBagConstraints);

        cardsPanel.add(releasePanel, "release");

        helpPanel.setMinimumSize(new java.awt.Dimension(832, 490));
        helpPanel.setPreferredSize(new java.awt.Dimension(832, 490));
        helpPanel.setLayout(new java.awt.GridBagLayout());

        helpTabs.setBackground(new java.awt.Color(255, 255, 153));
        helpTabs.setMinimumSize(new java.awt.Dimension(812, 470));
        helpTabs.setPreferredSize(new java.awt.Dimension(812, 470));

        parkingHelp.setPreferredSize(new java.awt.Dimension(812, 460));
        parkingHelp.setLayout(new java.awt.GridBagLayout());

        parkInsLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        parkInsLabel.setText("<html>\nTo Park a Vehicle into the Parking Lot Area: <br>\n<ul>\n<li><b>Click on the Park Button from Menu Bar at the left side of the app screen.</b><br>\nBy clicking on the button, you will see a page where you'll have to enter the details of the app.</li><br>\n<li><b>Enter the details of the Vehicle:</b>\n<ol>\n<li>Enter the <b>Vehicle Identification Number(VIN)</b> of the vehicle.</li>\n<li>Select the <b>Type</b> of the vehicle (Car, Truck or Bike).</li>\n<li>Select the <b>Color</b> of the vehicle from the list of available options <br><i>(if you think the vehicle has a different color, select the color that matches best).</i></li><br>\n</ol>\n<li>Click on <b>CONFIRM</b> button.<br>\nHurray! The vehicle is successfully parked.</li><br>\n<li>A <b>Ticket ID</b> is generated for the parked vehicle which is given to the owner of the vehicle.</li>\n</ul><br>\n<hr>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        parkingHelp.add(parkInsLabel, gridBagConstraints);

        helpTabs.addTab("Parking a Vehicle", new javax.swing.ImageIcon(getClass().getResource("/images/park.png")), parkingHelp); // NOI18N

        releasingHelp.setPreferredSize(new java.awt.Dimension(812, 460));
        releasingHelp.setLayout(new java.awt.GridBagLayout());

        releaseInsLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        releaseInsLabel.setText("<html>\nTo release (unpark) a vehicle from the parking lot area, you'll need a <b>valid Ticket ID</b>.<br>\n<ul>\n<li>Enter the <b>Ticket ID</b> of the vehicle to be released.</li><br>\n<li>Click on <b>CONFIRM</b> button.</li><br>\n<li>If the entered Ticket ID was valid, you will see a message showing that the vehicle is successfully released from the parking lot.</li>\n</ul><br>\n<hr>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        releasingHelp.add(releaseInsLabel, gridBagConstraints);

        helpTabs.addTab("Releasing a Vehicle", new javax.swing.ImageIcon(getClass().getResource("/images/release.png")), releasingHelp); // NOI18N

        viewingHelp.setPreferredSize(new java.awt.Dimension(812, 460));
        viewingHelp.setLayout(new java.awt.GridBagLayout());

        viewInsLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        viewInsLabel.setText("<html>\nThe status of the Parking Lot can viewed in three ways:\n<ol>\n<li>View No. of Open Slots</li>\n<li>Display Available Slots</li>\n<li>Display Occupied Slots</li>\n</ol>\n<hr>\n<h2>View No. of Open Slots</h2>\nThis section tells the current no. of open slots for a particular type of vehicle.<br>\nSimply select the type of vehicle and you'll get to know the no. of open slots that are currently available for that type of vehicle.\n<br><br>\n<hr>\n<h2>Display Available Slots</h2>\nUnlike <b>'View No. of Open Slots'</b> section, this section actually display the locations of the slots that are currently available for a vehicle type.<br>\nJust select the type of vehicle and the current available slots for that vehicle type will be displayed.\n<br><br>\n<hr>\n<h2>Display Occupied Slots</h2>\nThis section, located at the right hand side of the <b>View</b> Page, displays the slots that are currently occupied by a particular type of vehicle.<br>\nTo view the occupied slots of any vehicle type, select the type of vehicle its currently occupied slots will be displayed.\n<br><br>\n<hr>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        viewingHelp.add(viewInsLabel, gridBagConstraints);

        helpTabs.addTab("Checking Parking Lot Status", new javax.swing.ImageIcon(getClass().getResource("/images/system-regular-14-article (1).png")), viewingHelp); // NOI18N

        upcomingFeatures.setPreferredSize(new java.awt.Dimension(812, 460));

        javax.swing.GroupLayout upcomingFeaturesLayout = new javax.swing.GroupLayout(upcomingFeatures);
        upcomingFeatures.setLayout(upcomingFeaturesLayout);
        upcomingFeaturesLayout.setHorizontalGroup(
            upcomingFeaturesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1025, Short.MAX_VALUE)
        );
        upcomingFeaturesLayout.setVerticalGroup(
            upcomingFeaturesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        helpTabs.addTab("What's Cooking!?", new javax.swing.ImageIcon(getClass().getResource("/images/system-regular-93-pizza-slice.png")), upcomingFeatures); // NOI18N

        aboutUs.setPreferredSize(new java.awt.Dimension(812, 460));

        javax.swing.GroupLayout aboutUsLayout = new javax.swing.GroupLayout(aboutUs);
        aboutUs.setLayout(aboutUsLayout);
        aboutUsLayout.setHorizontalGroup(
            aboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1025, Short.MAX_VALUE)
        );
        aboutUsLayout.setVerticalGroup(
            aboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        helpTabs.addTab("About Us", new javax.swing.ImageIcon(getClass().getResource("/images/system-regular-178-work.png")), aboutUs); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        helpPanel.add(helpTabs, gridBagConstraints);

        cardsPanel.add(helpPanel, "help");

        javax.swing.GroupLayout appPanelLayout = new javax.swing.GroupLayout(appPanel);
        appPanel.setLayout(appPanelLayout);
        appPanelLayout.setHorizontalGroup(
            appPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appPanelLayout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        appPanelLayout.setVerticalGroup(
            appPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appPanelLayout.createSequentialGroup()
                .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(appPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                    .addComponent(cardsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        getContentPane().add(appPanel, "app");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        
        LoginAgent la=new LoginAgent();
        if(la.authenticateUser(uNameText.getText(),String.valueOf(pwText.getPassword()))) {
            uNameText.setText("");
            pwText.setText("");
            errLabel.setText("");
            CardLayout c = (CardLayout)getContentPane().getLayout();
            c.show(this.getContentPane(), "app");
        }
        else {
            errLabel.setText("Wrong Username or Password!!!");
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void logoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabelMouseClicked
        CardLayout c = (CardLayout)getContentPane().getLayout();
        c.show(this.getContentPane(), "login");
    }//GEN-LAST:event_logoutLabelMouseClicked

    private void parkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parkButtonActionPerformed
        currButton.setBackground(new java.awt.Color(153, 255, 255));
        parkButton.setBackground(new java.awt.Color(255, 255, 153));
        currButton = parkButton;
        CardLayout c = (CardLayout)cardsPanel.getLayout();
        c.show(cardsPanel, "park");
    }//GEN-LAST:event_parkButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        currButton.setBackground(new java.awt.Color(153, 255, 255));
        viewButton.setBackground(new java.awt.Color(255, 255, 153));
        currButton = viewButton;
        CardLayout c = (CardLayout)cardsPanel.getLayout();
        c.show(cardsPanel, "view");
    }//GEN-LAST:event_viewButtonActionPerformed

    private void releaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releaseButtonActionPerformed
        currButton.setBackground(new java.awt.Color(153, 255, 255));
        releaseButton.setBackground(new java.awt.Color(255, 255, 153));
        currButton = releaseButton;
        CardLayout c = (CardLayout)cardsPanel.getLayout();
        c.show(cardsPanel, "release");
    }//GEN-LAST:event_releaseButtonActionPerformed

    private void vehicleTypeBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleTypeBox1ActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        String vType = (String)cb.getSelectedItem();
        if(vType.equals("Select Vehicle Type")==false)
            openSlotsLabel.setText("Currently Open Slots for "+vType+": ");
    }//GEN-LAST:event_vehicleTypeBox1ActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        currButton.setBackground(new java.awt.Color(153, 255, 255));
        helpButton.setBackground(new java.awt.Color(255, 255, 153));
        currButton = helpButton;
        CardLayout c = (CardLayout)cardsPanel.getLayout();
        c.show(cardsPanel, "help");
    }//GEN-LAST:event_helpButtonActionPerformed

    private void vehicleTypeBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleTypeBox2ActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        String vType = (String)cb.getSelectedItem();
        if(vType.equals("Select Vehicle Type")==false) {
            occSlotsPanelJr.setBorder(javax.swing.BorderFactory.createTitledBorder("Occupied "+vType+" Slots"));
            occSlotsPanelJr.setVisible(true);
        }
    }//GEN-LAST:event_vehicleTypeBox2ActionPerformed

    private void vehicleTypeBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleTypeBox3ActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        String vType = (String)cb.getSelectedItem();
        if(vType.equals("Select Vehicle Type")==false) {
            availSlotsPanelJr.setBorder(javax.swing.BorderFactory.createTitledBorder("Available "+vType+" Slots"));
            availSlotsPanelJr.setVisible(true);
            availVehicles.setText(vType);
        }
    }//GEN-LAST:event_vehicleTypeBox3ActionPerformed

    private void parkConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parkConfirmButtonActionPerformed
        Main m = new Main();
        String ticketId = m.generateTicketId(vinText.getText(), getSelectedButtonText(vehicleType), (String)vehicleColorBox.getSelectedItem());
        if(!ticketId.equals("Full")) {
            JOptionPane.showMessageDialog(parkDialog, "Your vehicle has been parked successfully!\nTicket ID: "+ticketId);
        }
        else {
            JOptionPane.showMessageDialog(parkDialog, "Sorry, the "+getSelectedButtonText(vehicleType)+" slots are currently full!");
        }
    }//GEN-LAST:event_parkConfirmButtonActionPerformed
    
    private String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
                else if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        try {
            File imageFile = new File("M:\\Coding\\Java\\Minor Project\\ParkingLotManagementSystem\\src\\images\\frameIcon2.png");
            img = ImageIO.read(imageFile);
        } catch (IOException exc) {
            System.out.println("Cannot load image file!");
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppGUI().setVisible(true);
            }
        });
    }
    
    static Image img;
    private javax.swing.JButton currButton;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aboutUs;
    private javax.swing.JPanel appPanel;
    private javax.swing.JPanel availSlotsPanel;
    private javax.swing.JPanel availSlotsPanelJr;
    private javax.swing.JLabel availVehicles;
    private javax.swing.JRadioButton bikeRButton;
    private javax.swing.JRadioButton carRButton;
    private javax.swing.JPanel cardsPanel;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JLabel errLabel;
    private javax.swing.JButton helpButton;
    private javax.swing.JPanel helpPanel;
    private javax.swing.JTabbedPane helpTabs;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel loginBox;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JLabel loginPicLabel;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JPanel occSlotsPanel;
    private javax.swing.JPanel occSlotsPanelJr;
    private javax.swing.JLabel openSlotsLabel;
    private javax.swing.JPanel openSlotsPanel;
    private javax.swing.JButton parkButton;
    private javax.swing.JButton parkConfirmButton;
    private javax.swing.JDialog parkDialog;
    private javax.swing.JLabel parkInsLabel;
    private javax.swing.JPanel parkPanel;
    private javax.swing.JPanel parkingHelp;
    private javax.swing.JLabel pwLabel;
    private javax.swing.JPasswordField pwText;
    private javax.swing.JButton releaseButton;
    private javax.swing.JButton releaseConfirmButton;
    private javax.swing.JLabel releaseInsLabel;
    private javax.swing.JPanel releasePanel;
    private javax.swing.JPanel releasingHelp;
    private javax.swing.JLabel setLabel;
    private javax.swing.JLabel ticketLabel;
    private javax.swing.JTextField ticketText;
    private javax.swing.JRadioButton truckRButton;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JLabel uNameLabel;
    private javax.swing.JTextField uNameText;
    private javax.swing.JPanel upcomingFeatures;
    private javax.swing.JComboBox<String> vehicleColorBox;
    private javax.swing.ButtonGroup vehicleType;
    private javax.swing.JComboBox<String> vehicleTypeBox1;
    private javax.swing.JComboBox<String> vehicleTypeBox2;
    private javax.swing.JComboBox<String> vehicleTypeBox3;
    private javax.swing.JButton viewButton;
    private javax.swing.JLabel viewInsLabel;
    private javax.swing.JPanel viewPanel;
    private javax.swing.JPanel viewingHelp;
    private javax.swing.JLabel vinLabel;
    private javax.swing.JTextField vinText;
    // End of variables declaration//GEN-END:variables
}
